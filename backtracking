#include <iostream>
#include <vector>
using namespace std;

// Example: Solving a simple N-Queens problem
bool isSafe(vector<vector<int>>& board, int row, int col) {
    int n = board.size();

    // Check this column in previous rows
    for (int i = 0; i < row; i++) {
        if (board[i][col] == 1) return false;
    }

    // Check upper-left diagonal
    for (int i = row, j = col; i >= 0 && j >= 0; i--, j--) {
        if (board[i][j] == 1) return false;
    }

    // Check upper-right diagonal
    for (int i = row, j = col; i >= 0 && j < n; i--, j++) {
        if (board[i][j] == 1) return false;
    }

    return true;
}

bool solveNQueens(vector<vector<int>>& board, int row) {
    int n = board.size();
    if (row == n) return true; // All queens placed

    for (int col = 0; col < n; col++) {
        if (isSafe(board, row, col)) {
            board[row][col] = 1; // Place queen
            if (solveNQueens(board, row + 1)) return true;
            board[row][col] = 0; // Backtrack
        }
    }

    return false; // No solution
}

void printBoard(vector<vector<int>>& board) {
    for (auto& row : board) {
        for (auto cell : row) {
            cout << (cell == 1 ? "Q " : ". ");
        }
        cout << endl;
    }
}

int main() {
    int n = 8; // Number of queens
    vector<vector<int>> board(n, vector<int>(n, 0));

    if (solveNQueens(board, 0)) {
        printBoard(board);
    } else {
        cout << "No solution exists." << endl;
    }

    return 0;
}